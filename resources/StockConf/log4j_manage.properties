# 定义 DEBUG 优先级， R 为日志输出目的的   
  
#log4j.rootLogger= DEBUG, R   
  
# 设置日志输出类型 , 为文件类型   
  
#log4j.appender.R= org.apache.log4j.FileAppender   
  
# 设置日志文件名 logRecord.log, 输出到 tomcat 服务器的 logs 目录下   
  
#log4j.appender.R.file= ./logs/logRecord.log   
  
# 每次在文件尾写入新的日志信息   
  
#log4j.appender.R.Append= true   
  
# 日志输出信息格式类型   
  
#log4j.appender.R.layout= org.apache.log4j.PatternLayout   
  
# 日志输出信息格式为 换行、日期、优先级、 [ 全类名 ] 、日志信息、换行   
  
#log4j.appender.R.layout.ConversionPattern= %n%d%p [%l] %m%n   

#log4j.rootLogger=DEBUG, A1 ,R 
#log4j.appender.A1=org.apache.log4j.ConsoleAppender 
#log4j.appender.A1.layout=org.apache.log4j.PatternLayout 
#log4j.appender.A1.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss} [%c]-[%p] %m%n
#log4j.appender.R=org.apache.log4j.RollingFileAppender 
log4j.rootLogger= FATAL,R 
log4j.appender.R= org.apache.log4j.FileAppender  
log4j.appender.R.File=./logs/logManage.log 
log4j.appender.R.MaxFileSize=1000000KB 
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout 
log4j.appender.R.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [ %c:%t:%r ] - [ %p ] %l %m%n